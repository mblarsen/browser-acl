let t=(()=>{class t{constructor({strict:t=!1}={}){this.strict=t,this.rules=new Map,this.policies=new Map,this.registry=new WeakMap}rule(e,r,s=!0){let i;var o;"boolean"==typeof(o=r)||void 0===o||"function"==typeof o&&""===o.name?(s=void 0===r||r,i=t.GlobalRule):i=r;const n=this.subjectMapper(i);return(Array.isArray(e)?e:[e]).forEach(t=>{const e=this.rules.get(n)||{};e[t]=s,this.rules.set(n,e)}),this}policy(t,e){const r="function"==typeof t?new t:t,s=this.subjectMapper(e);return this.policies.set(s,r),this}register(t,e){return this.registry.set(t,e),this}can(e,r,s,...i){const o=this.subjectMapper(s=void 0===s?t.GlobalRule:s),n=this.policies.get(o),u=n||this.rules.get(o);if(void 0===u){if(this.strict)throw new Error(`No rules for subject "${o}"`);return!1}if(n&&"function"==typeof n.beforeAll){const t=n.beforeAll(r,e,s,o,...i);if(void 0!==t)return t}if("function"==typeof u[r])return Boolean(u[r](e,s,o,...i));if(this.strict&&void 0===u[r])throw new Error(`Unknown verb "${r}"`);return Boolean(u[r])}some(t,e,r,...s){return r.some(r=>this.can(t,e,r,...s))}every(t,e,r,...s){return r.every(r=>this.can(t,e,r,...s))}mixin(t){const e=this;return t.prototype.can=function(t,r,...s){return e.can(this,t,r,...s)},t.prototype.can.every=function(t,r,...s){return e.every(this,t,r,...s)},t.prototype.can.some=function(t,r,...s){return e.some(this,t,r,...s)},this}subjectMapper(t){return"string"==typeof t?t:this.registry.has(t)?this.registry.get(t):this.registry.has(t.constructor)?this.registry.get(t.constructor):"function"==typeof t?t.name:t.constructor.name}reset(){return this.rules=new Map,this.policies=new Map,this.registry=new WeakMap,this}removeRules(t,e=null){const r=this.subjectMapper(t);if(this.rules.has(r)){if(e){const t=this.rules.get(r);return t&&delete t[e],this}this.rules.delete(r)}return this}removePolicy(t){const e=this.subjectMapper(t);return this.policies.delete(e),this}removeAll(t){return this.removeRules(t),this.removePolicy(t),this}}return t.GlobalRule="GLOBAL_RULE",t})();export default t;
//# sourceMappingURL=index.modern.js.map
